{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {     
        "adminAADObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Object ID of Admin Group or User to give access to key vault"
            }
        },
        "tenantIdAdminAAD": {
            "type": "securestring",
            "metadata": { 
                "description": "Tenant ID of the Admin Group or User to give access to key vault"
            }
        },
        "adminEmail": {
            "type": "string",
            "metadata": {
                "description": "The admin email of the APIM"
            }
        },
        "orgName": {
            "type": "string",
            "metadata": {
                "description": "The organization name"
            }
        }        
    },
    "functions": [],
    "variables": {
        "appPlanName": "[concat('web-plan-speech-',uniqueString(resourceGroup().id))]",
        "appPlanNameApi": "[concat('speech-api-',uniqueString(resourceGroup().id))]",   
        "redisCacheName": "[concat('redis-',uniqueString(resourceGroup().id))]",
        "webAppName": "[concat('front-end-demo-speech',uniqueString(resourceGroup().id))]",
        "jobApiName": "[concat('job-api-',uniqueString(resourceGroup().id))]",
        "strName": "[uniqueString(resourceGroup().id)]",
        "strNameFunc": "[concat('funcstr',uniqueString(resourceGroup().id))]",
        "funcName": "[concat('func-api-speech-',uniqueString(resourceGroup().id))]",
        "funcPlanName": "[concat('func-api-plan-',uniqueString(resourceGroup().id))]",
        "speechApiName": "[concat('speech-demo-',uniqueString(resourceGroup().id))]",                
        "userAssignedIdentity": "[concat('func-user-ident-',uniqueString(resourceGroup().id))]",        
        "signalRServiceName": "[concat('signalr-',uniqueString(resourceGroup().id))]",
        "cognitiveServiceId": "[resourceId('Microsoft.CognitiveServices/accounts',variables('speechApiName'))]",
        "identityID": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentity'))]",
        "storageReferenceId": "[resourceId('Microsoft.Storage/storageAccounts',variables('strName'))]",
        "cosmosDbName": "[concat('cosmosdb-',uniqueString(resourceGroup().id))]",
        "vnetCloudName": "vnet-cloud-services",
        "serviceBusName": "[concat('svb-',uniqueString(resourceGroup().id))]",
        "appInsightsId": "[resourceId('microsoft.insights/components',variables('funcName'))]",
        "apimName": "[concat('apim-',uniqueString(resourceGroup().id))]",
        "cognitiveText": "[concat('textapi-',uniqueString(resourceGroup().id))]",
        "databaseName": "voicesystem",
        "containerName": "jobs",
        "valetApiName": "[concat('valetapi-',uniqueString(resourceGroup().id))]",
        "subnetAPIMRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetCloudName'), 'apim-vnet')]",
        "subnetWebAppRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetCloudName'), 'webApp')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('userAssignedIdentity')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "[variables('appPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "properties": {
                "name": "[variables('appPlanName')]"
            }
        },
        {
            "name": "[variables('appPlanNameApi')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "properties": {
                "name": "[variables('appPlanNameApi')]"
            }
        },        
        {
            "name": "[variables('signalRServiceName')]",
            "type": "Microsoft.SignalRService/SignalR",
            "apiVersion": "2020-07-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "features": [
                    {
                        "flag": "ServiceMode",
                        "value": "Default"
                    },
                    {
                        "flag": "EnableConnectivityLogs",
                        "value": "true"
                    }
                ]
            },
            "sku": {
                "name": "Free_F1",
                "tier": "Free",
                "capacity": "1"
            },
            "dependsOn": [],
            "tags": {}
        },   
        {
            "name": "[variables('redisCacheName')]",
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                }
            }
        },  
        {
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
                "[resourceId('Microsoft.SignalRService/SignalR', variables('signalRServiceName'))]",
                "[resourceId('Microsoft.Cache/Redis',variables('redisCacheName'))]"
                
            ],
            "tags": {
                "appname": "wedtier-speech-demo-api"
            },            
            "properties": {
                "name": "[variables('webAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {                                    
                            "name": "signalRCnxString",
                            "value": "[listkeys(resourceId('Microsoft.SignalRService/SignalR', variables('signalRServiceName')), '2020-05-01').primaryConnectionString]"            
                        },
                        {
                            "name": "Redis:Name",
                            "value": "[variables('redisCacheName')]"
                        },
                        {
                            "name": "Redis:ConnectionString",
                            "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2016-04-01').primaryKey]"
                        },
                        {
                            "name": "Api:JobApi",
                            "value": "[concat('https://',variables('jobApiName'),'.azurewebsites.net')]"
                        },
                        {
                            "name": "Api:JobApiScope",
                            "value": "JobApi.All"
                        },
                        {
                            "name": "Api:ValetApi",
                            "value": "[concat('https://',variables('valetApiName'),'.azurewebsites.net')]"
                        },
                        {
                            "name": "Api:ValetScope",
                            "value": "ValetApi.All"
                        }
                    ]
                }
            }                     
        },
        {
            "name": "[variables('jobApiName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appPlanNameApi'))]"                
            ],
            "tags": {
                "appname": "job-api"
            },            
            "properties": {
                "name": "[variables('jobApiName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appPlanNameApi'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "ServiceBus:CnxString",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules',variables('serviceBusName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
                        },
                        {
                            "name": "ServiceBus:QueueName",
                            "value": "analyzetextqueue"
                        },
                        {
                            "name": "CosmosDB:Endpoint",
                            "value": "[concat('https://',variables('cosmosDbName'),'.documents.azure.com:443/')]"
                        },
                        {
                            "name": "CosmosDB:PrimaryKey",
                            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2015-04-08').primaryMasterKey]"
                        },
                        {
                            "name": "CosmosDB:Database",
                            "value": "[variables('databaseName')]"
                        },
                        {
                            "name": "CosmosDB:Container",
                            "value": "[variables('containerName')]"
                        }
                    ]
                }
            }    
        },       
        {
            "name": "[variables('valetApiName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appPlanNameApi'))]"                
            ],
            "tags": {
                "appname": "job-api"
            },            
            "properties": {
                "name": "[variables('valetApiName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('appPlanNameApi'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "ContainerName",
                            "value": "audiofiles"
                        },
                        {
                            "name": "StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('strName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name,'Microsoft.Storage/storageAccounts', resourceGroup().name), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "StorageKey",
                            "value": "[listKeys(variables('storageReferenceId'),'2019-04-01').keys[0].value]"
                        }
                    ]
                }
            }    
        },               
        {
            "name": "[variables('strName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "name": "[concat(variables('strName'),'/default/audiofiles')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "properties": {
                "publicAccess": "None"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('strName'))]"
            ]
        },        
        {
            "apiVersion": "2015-05-01",
            "name": "[variables('funcName')]",
            "type": "microsoft.insights/components",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "ApplicationId": "[variables('funcName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('strNameFunc')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },        
        {
            "apiVersion": "2018-11-01",
            "name": "[variables('funcPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "kind": "",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "name": "[variables('funcPlanName')]",
                "workerSize": "3",
                "workerSizeId": "3",
                "numberOfWorkers": "1",
                "maximumElasticWorkerCount": "20"
            },
            "sku": {
                "Tier": "ElasticPremium",
                "Name": "EP1"
            }
        },     
        {
            "apiVersion": "2017-04-18",
            "name": "[variables('speechApiName')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "SpeechServices",
            "sku": {
                "name": "S0"
            },
            "properties": {                
            }
        },
        {
            "apiVersion": "2017-04-18",
            "name": "[variables('cognitiveText')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "TextAnalytics",
            "sku": {
                "name": "S"
            },
            "properties": {
                "customSubDomainName": "[variables('cognitiveText')]"
            }
        },        
        {
            "apiVersion": "2020-04-01",
            "kind": "GlobalDocumentDB",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[variables('cosmosDbName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "id": "[concat(variables('cosmosDbName'), '-', resourceGroup().location)]",
                        "failoverPriority": 0,
                        "locationName": "[resourceGroup().location]"
                    }
                ],
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "ipRules": [],
                "dependsOn": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "enableFreeTier": false
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('cosmosDbName'), '/', variables('databaseName'))]",
            "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]" ],
            "properties": {
                "resource": {
                "id": "[variables('databaseName')]"
                }
            }
        },        
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('cosmosDbName'), '/', variables('databaseName'), '/', variables('containerName'))]",
            "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbName'), variables('databaseName'))]" ],
            "properties": {
                "resource": {
                    "id": "[variables('containerName')]",
                    "partitionKey": {
                        "paths": [
                        "/createdBy"
                        ],
                        "kind": "Hash"
                    },
                    "defaultTtl": 86400
                },
                "options": { }
            }
        },        
        {
            "name": "[variables('funcName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('speechApiName'))]",
                "[concat('microsoft.insights/components/', variables('funcName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('funcPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('strNameFunc'))]"                
            ],
            "tags": {
                "appname": "function-speech-demo-api"
            },
            "properties": {
                "name": "[variables('funcName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "UploadVoiceTextStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('strName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name,'Microsoft.Storage/storageAccounts', variables('strName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "CognitiveServiceEndpoint",
                            "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('speechApiName'))).endpoint]"
                        },                        
                        {
                            "name": "CognitiveServiceSubscriptionKey",
                            "value": "[listKeys(variables('cognitiveServiceId'),'2017-04-18').key1]"
                        },
                        {
                            "name": "ServiceBusCnxString",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules',variables('serviceBusName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
                        },
                        {
                            "name": "CosmosDBConnection",
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2019-12-12').connectionStrings[0].connectionString]"
                        },
                        {
                            "name": "StorageAccountName",
                            "value": "[variables('strName')]"
                        },
                        {
                            "name": "AudioFilesStorageKey",
                            "value": "[listKeys(variables('storageReferenceId'),'2019-04-01').keys[0].value]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/',variables('funcName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(concat('microsoft.insights/components/',variables('funcName')), '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('strNameFunc'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strNameFunc')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('strNameFunc'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strNameFunc')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(variables('funcName')), 'a8dd')]"
                        }
                    ],
                    "use32BitWorkerProcess": true
                },
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('funcPlanName'))]",
                "clientAffinityEnabled": true
            }
            // "identity": {
            //     "type": "UserAssigned",
            //     "userAssignedIdentities": {
            //         "[variables('identityID')]": { }
            //     }
            // }
        },
        // {
        //     "name": "[variables('vnetCloudName')]",
        //     "type": "Microsoft.Network/virtualNetworks",
        //     "apiVersion": "2019-11-01",
        //     "location": "[resourceGroup().location]",
        //     "properties": {
        //         "addressSpace": {
        //             "addressPrefixes": [
        //                 "10.0.0.0/16"
        //             ]
        //         },
        //         "subnets": [
        //             {
        //                 "name": "apim-vnet",
        //                 "properties": {
        //                     "addressPrefix": "10.0.0.0/24"
        //                 }
        //             }                   
        //         ]
        //     }
        // },
        // {
        //     "apiVersion": "2019-12-01",
        //     "name": "[variables('apimName')]",
        //     "location": "[resourceGroup().location]",
        //     "type": "Microsoft.ApiManagement/service",
        //     "sku": {
        //         "name": "Developer",
        //         "capacity": 1
        //     },
        //     "properties": {
        //         "publisherEmail": "[parameters('adminEmail')]",
        //         "publisherName": "[parameters('orgName')]",
        //         "virtualNetworkType": "External",
        //         "virtualNetworkConfiguration": {
        //             "subnetResourceId": "[variables('subnetAPIMRef')]"
        //         }                
        //     },
        //     "resources": [
        //         {
        //             "apiVersion": "2019-12-01",
        //             "type": "loggers",
        //             "name": "[variables('funcName')]",
        //             "dependsOn": [
        //                 "[concat('Microsoft.ApiManagement/service/', variables('apimName'))]"
        //             ],
        //             "properties": {
        //                 "loggerType": "applicationInsights",
        //                 "resourceId": "[variables('appInsightsId')]",
        //                 "credentials": {
        //                     "instrumentationKey": "[reference(variables('appInsightsId'), '2015-05-01').InstrumentationKey]"
        //                 }
        //             }
        //         },
        //         {
        //             "apiVersion": "2019-12-01",
        //             "type": "diagnostics",
        //             "name": "applicationinsights",
        //             "dependsOn": [
        //                 "[concat('Microsoft.ApiManagement/service/', variables('apimName'))]",
        //                 "[concat('Microsoft.ApiManagement/service/', variables('apimName'), '/loggers/', variables('funcName'))]"
        //             ],
        //             "properties": {
        //                 "loggerId": "[concat('/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/', variables('apimName'), '/loggers/', variables('funcName'))]",
        //                 "alwaysLog": "allErrors",
        //                 "sampling": {
        //                     "percentage": 100,
        //                     "samplingType": "fixed"
        //                 }
        //             }
        //         }
        //     ]
        // },        
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('serviceBusName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "analyzetextqueue",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                        "deadLetteringOnMessageExpiration": false,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "processtextqueue",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                        "deadLetteringOnMessageExpiration": false,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                }            
            ]
        }        
    ],
    "outputs": {}
}